stages:
  - build
  - deploy-development-staging
  - deploy-production

variables:
  AWS_DEFAULT_REGION: us-east-1
  DEV_BUCKET_NAME: gnosis-safe-team-development
  STAGING_BUCKET_RINKEBY_NAME: gnosis-safe-team-staging
  STAGING_BUCKET_MAINNET_NAME: gnosis-safe-team-mainnet-staging
  BUILDED_FILES_DIR: "public"

build project:
  stage: build
  tags:
    - node-full
  cache:
    key:
      files:
        - package.json
        - yarn.lock
    paths:
      - node_modules/
      - .yarn
  before_script:
    - rm -rf .cache
    - rm -rf public
    - yarn config set cache-folder .yarn
    - yarn install
  script:
    - yarn build
  only:
    - master
    - develop
    - tags
  artifacts:
    paths:
     - public/
    expire_in: 1 week


deploy dev rinkeby:
  stage: deploy-development-staging
  tags:
    - python
  environment:
    name: development
    url: http://safe-team.dev.gnosisdev.com
  before_script:
    - pip install awscli # Install the SDK
  script:
    - aws s3 sync public/ s3://${DEV_BUCKET_NAME}/current --delete --exclude "*.html" --exclude "/page-data" --cache-control max-age=31536000,public
    - aws s3 sync public/ s3://${DEV_BUCKET_NAME}/current --delete --exclude "*" --include "*.html" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html
    - aws s3 sync public/ s3://${DEV_BUCKET_NAME}/current --delete --exclude "*" --include "/page-data" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type application/json
    # Special case - .well-known/apple-app-site-association must have "Content-type: application/json"
    - aws s3 sync public/ s3://${DEV_BUCKET_NAME}/current --delete --exclude "*" --include "apple-app-site-association" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type application/json
  only:
    - develop

deploy staging rinkeby:
  stage: deploy-development-staging
  tags:
    - python
  environment:
    name: staging-rinkeby
    url: http://safe-team-rinkeby.staging.gnosisdev.com
  before_script:
    - pip install awscli # Install the SDK
  script:
    - aws s3 sync public/ s3://${STAGING_BUCKET_RINKEBY_NAME}/current --delete --exclude "*.html" --exclude "/page-data" --cache-control max-age=31536000,public
    - aws s3 sync public/ s3://${STAGING_BUCKET_RINKEBY_NAME}/current --delete --exclude "*" --include "*.html" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html
    - aws s3 sync public/ s3://${STAGING_BUCKET_RINKEBY_NAME}/current --delete --exclude "*" --include "/page-data" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type application/json
    # Special case - .well-known/apple-app-site-association must have "Content-type: application/json"
    - aws s3 sync public/ s3://${STAGING_BUCKET_RINKEBY_NAME}/current --delete --exclude "*" --include "apple-app-site-association" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type application/json
  only:
    - master

deploy staging mainnet:
  stage: deploy-development-staging
  tags:
    - python
  environment:
    name: staging-mainnet
    url: http://safe-team-mainnet.staging.gnosisdev.com
  before_script:
    - pip install awscli # Install the SDK
  script:
    - aws s3 sync public/ s3://${STAGING_BUCKET_MAINNET_NAME}/current --delete --exclude "*.html" --exclude "/page-data" --cache-control max-age=31536000,public
    - aws s3 sync public/ s3://${STAGING_BUCKET_MAINNET_NAME}/current --delete --exclude "*" --include "*.html" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html
    - aws s3 sync public/ s3://${STAGING_BUCKET_MAINNET_NAME}/current --delete --exclude "*" --include "/page-data" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type application/json
    # Special case - .well-known/apple-app-site-association must have "Content-type: application/json"
    - aws s3 sync public/ s3://${STAGING_BUCKET_MAINNET_NAME}/current --delete --exclude "*" --include "apple-app-site-association" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type application/json
  only:
    - master

package release version:
  stage: deploy-development-staging
  tags:
    - python
  environment:
    name: releases/${CI_COMMIT_TAG}
  before_script:
    - pip install awscli # Install the SDK
  script:
    - aws s3 sync public/ s3://${STAGING_BUCKET_MAINNET_NAME}/releases-landing/${CI_COMMIT_TAG} --delete --exclude "*.html" --exclude "/page-data" --cache-control max-age=31536000,public
    - aws s3 sync public/ s3://${STAGING_BUCKET_MAINNET_NAME}/releases-landing/${CI_COMMIT_TAG} --delete --exclude "*" --include "*.html" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html
    - aws s3 sync public/ s3://${STAGING_BUCKET_MAINNET_NAME}/releases-landing/${CI_COMMIT_TAG} --delete --exclude "*" --include "/page-data" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type application/json
    # Special case - .well-known/apple-app-site-association must have "Content-type: application/json"
    - aws s3 sync public/ s3://${STAGING_BUCKET_MAINNET_NAME}/releases-landing/${CI_COMMIT_TAG} --delete --exclude "*" --include "apple-app-site-association" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type application/json
  only:
    - tags

prepare production manual deployment:
  stage: deploy-production
  tags:
    - python
  before_script:
    - apk add curl
  script:
    - curl -X POST
      -F token=b2714eed58515d73bf6eab463cfc6d
      -F ref=master
      -F "variables[TRIGGER_RELEASE_COMMIT_TAG]=${CI_COMMIT_TAG}"
      -F "variables[TRIGGER_USER_EMAIL]=${GITLAB_USER_EMAIL}"
      https://gitlab.gnosisdev.com/api/v4/projects/34/trigger/pipeline
  only:
    - tags
